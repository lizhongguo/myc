(STAT (int a))
(STAT (= a (NUM 1)))
(WHILESTAT (while (- (NUM 10) (VAR a)) (BLOCK (STAT (= a (+ (VAR a) (NUM 1)))))))
(IFSTAT (if (- (NUM 10) (VAR a)) (BLOCK (STAT (= a (NUM 13)))) (BLOCK (STAT (= a (NUM 8))))))
.data a : .int 0
.code mov $1, %eax;
.code pushq %rax;
.code popq %rax;
.code movl %eax , a;
.code pushq %rax;
.code label0:
.code mov $10, %eax;
.code pushq %rax;
.code movl a, %eax;
.code pushq %rax;
.code popq %rbx;
.code popq %rax;
.code subl %ebx,%eax;
.code pushq %rax;
.code jz llabel0;
.code movl a, %eax;
.code pushq %rax;
.code mov $1, %eax;
.code pushq %rax;
.code popq %rbx;
.code popq %rax;
.code addl %ebx,%eax;
.code pushq %rax;
.code popq %rax;
.code movl %eax , a;
.code pushq %rax;
.code jmp label0;
.code llabel0:
.code mov $10, %eax;
.code pushq %rax;
.code movl a, %eax;
.code pushq %rax;
.code popq %rbx;
.code popq %rax;
.code subl %ebx,%eax;
.code pushq %rax;
.code jz llabel1
.code mov $13, %eax;
.code pushq %rax;
.code popq %rax;
.code movl %eax , a;
.code pushq %rax;
.code jmp label1;
.code llabel1:
.code mov $8, %eax;
.code pushq %rax;
.code popq %rax;
.code movl %eax , a;
.code pushq %rax;
.code label1:
